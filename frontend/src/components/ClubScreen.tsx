import React, { useState, useMemo } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faTelegramPlane } from '@fortawesome/free-brands-svg-icons';
import { faUserPlus, faTrophy, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';

// –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
const sampleMembers = [
    { id: 1, name: '–ê–ª–∏—Å–∞', city: '–ú–æ—Å–∫–≤–∞', avatar: 'üë©' },
    { id: 2, name: '–ë–æ—Ä–∏—Å', city: '–°–ü–±', avatar: 'üë®' },
    { id: 3, name: '–í–∏–∫—Ç–æ—Ä–∏—è', city: '–ú–æ—Å–∫–≤–∞', avatar: 'üßë‚Äçü¶∞' },
    { id: 4, name: '–ì—Ä–∏–≥–æ—Ä–∏–π', city: '–ö–∞–∑–∞–Ω—å', avatar: 'üßî' },
    { id: 5, name: '–î–∞—Ä—å—è', city: '–°–ü–±', avatar: 'üë©‚Äçü¶±' },
    { id: 6, name: '–ï–≤–≥–µ–Ω–∏–π', city: '–ú–æ—Å–∫–≤–∞', avatar: 'üë®‚Äçü¶≥' },
    { id: 7, name: '–ñ–∞–Ω–Ω–∞', city: '–î—Ä—É–≥–∏–µ', avatar: 'üë©‚Äçü¶≤' }, // –ò—Å–ø–æ–ª—å–∑—É–µ–º "–î—Ä—É–≥–∏–µ"
    { id: 8, name: '–ò–≤–∞–Ω', city: '–°–ü–±', avatar: 'üë®‚Äçü¶±' },
    { id: 9, name: '–ö—Å–µ–Ω–∏—è', city: '–ú–æ—Å–∫–≤–∞', avatar: 'üë±‚Äç‚ôÄÔ∏è' },
    { id: 10, name: '–õ–µ–æ–Ω–∏–¥', city: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', avatar: 'üë¥' },
];

// –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞ (–ø—Ä–æ—Å—Ç–æ –∏–º–µ–Ω–∞ –∏ –æ—á–∫–∏/–∫–º)
const sampleLeaderboard = [
    { id: 1, name: '–ê–ª–∏—Å–∞', score: 125 },
    { id: 5, name: '–î–∞—Ä—å—è', score: 110 },
    { id: 9, name: '–ö—Å–µ–Ω–∏—è', score: 98 },
    { id: 2, name: '–ë–æ—Ä–∏—Å', score: 85 },
    { id: 6, name: '–ï–≤–≥–µ–Ω–∏–π', score: 72 },
];

// –°–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ + "–î—Ä—É–≥–∏–µ"
const cities = ['–ú–æ—Å–∫–≤–∞', '–°–ü–±', '–ö–∞–∑–∞–Ω—å', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–î—Ä—É–≥–∏–µ'];

// –î–æ–±–∞–≤–ª—è–µ–º userData –≤ –ø—Ä–æ–ø—Å—ã
interface ClubScreenProps {
  userData: Record<string, any>;
}

const ClubScreen: React.FC<ClubScreenProps> = ({ userData }) => {
    const [cityFilter, setCityFilter] = useState<string>('all');

    // –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ–∫–∞ –±—É–¥–µ—Ç undefined)
    // –í –±—É–¥—É—â–µ–º –ø–æ–ª–µ –¥–æ–ª–∂–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è 'city' –≤ userData
    const userCity = userData.city; 
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –≥–æ—Ä–æ–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const canFilterByUserCity = userCity && cities.includes(userCity);

    // –°—Ç–∏–ª–∏ (–¥–æ–±–∞–≤–ª—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º)
    const cardStyle: React.CSSProperties = { backgroundColor: 'white', borderRadius: '8px', padding: '20px', marginBottom: '15px', boxShadow: '0 2px 4px rgba(0,0,0,0.1)' };
    const telegramButtonStyle: React.CSSProperties = { display: 'inline-flex', alignItems: 'center', justifyContent: 'center', padding: '10px 20px', fontSize: '16px', fontWeight: 'bold', color: 'white', backgroundColor: '#0088cc', border: 'none', borderRadius: '5px', textDecoration: 'none', cursor: 'pointer', marginTop: '10px' };
    const filterButtonStyle: React.CSSProperties = { padding: '5px 10px', marginRight: '8px', marginBottom: '8px', border: '1px solid #ccc', borderRadius: '15px', background: '#f8f9fa', cursor: 'pointer', fontSize: '13px' };
    const activeFilterButtonStyle: React.CSSProperties = { ...filterButtonStyle, background: '#007bff', color: 'white', borderColor: '#007bff' };
    const disabledFilterButtonStyle: React.CSSProperties = { ...filterButtonStyle, cursor: 'not-allowed', opacity: 0.6 }; // –°—Ç–∏–ª—å –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    const avatarStyle: React.CSSProperties = { fontSize: '2rem', width: '40px', height: '40px', borderRadius: '50%', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#eee', margin: '3px' };
    const inviteButtonStyle: React.CSSProperties = { display: 'inline-flex', alignItems: 'center', justifyContent: 'center', padding: '8px 15px', fontSize: '14px', fontWeight: 'bold', color: '#198754', backgroundColor: '#d1e7dd', border: '1px solid #a3cfbb', borderRadius: '5px', cursor: 'pointer', marginTop: '10px' };

    // –§–∏–ª—å—Ç—Ä—É–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    const filteredMembers = useMemo(() => {
        if (cityFilter === 'all') return sampleMembers;
        return sampleMembers.filter(member => member.city === cityFilter);
    }, [cityFilter]);

    const handleMyCityFilter = () => {
        if (canFilterByUserCity) {
            setCityFilter(userCity);
        }
    };

    return (
        <div style={{ paddingBottom: '80px', paddingLeft: '10px', paddingRight: '10px' }}>
            <h1>–ö–ª—É–± Eerun</h1>

            {/* –ß–∞—Ç Telegram */}
            <div style={cardStyle}>
                <h2>–ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ</h2>
                <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É –¥–ª—è –æ–±–º–µ–Ω–∞ –æ–ø—ã—Ç–æ–º, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–æ–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –ø—Ä–æ–±–µ–∂–µ–∫!</p>
                <a href="#" target="_blank" rel="noopener noreferrer" style={telegramButtonStyle}>
                    <FontAwesomeIcon icon={faTelegramPlane} style={{ marginRight: '10px' }} />
                    –í–æ–π—Ç–∏ –≤ —á–∞—Ç Telegram
                </a>
                <p style={{ fontSize: '0.8em', color: 'grey', marginTop: '15px' }}>* –ß–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</p>
            </div>

            {/* –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª—É–±–∞ */} 
            <div style={cardStyle}>
                <h2>–£—á–∞—Å—Ç–Ω–∏–∫–∏ ({sampleMembers.length})</h2>
                {/* –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥–∞–º */} 
                <div style={{ marginBottom: '15px', borderBottom: '1px solid #eee', paddingBottom: '10px' }}>
                     <button 
                        onClick={() => setCityFilter('all')}
                        style={cityFilter === 'all' ? activeFilterButtonStyle : filterButtonStyle}
                    >–í—Å–µ –≥–æ—Ä–æ–¥–∞</button>
                    {/* –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ú–æ–π –≥–æ—Ä–æ–¥" */} 
                    <button 
                        onClick={handleMyCityFilter} 
                        style={cityFilter === userCity ? activeFilterButtonStyle : (canFilterByUserCity ? filterButtonStyle : disabledFilterButtonStyle)} 
                        disabled={!canFilterByUserCity} // –î–µ–ª–∞–µ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π, –µ—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –∏–∑–≤–µ—Å—Ç–µ–Ω/–Ω–µ –≤ —Å–ø–∏—Å–∫–µ
                    >
                         <FontAwesomeIcon icon={faMapMarkerAlt} style={{ marginRight: '5px' }} />
                         –ú–æ–π –≥–æ—Ä–æ–¥ {userCity ? `(${userCity})` : ''} {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–æ—Ä–æ–¥, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å */}
                     </button>
                    {cities.map(city => (
                         <button 
                            key={city}
                            onClick={() => setCityFilter(city)}
                            style={cityFilter === city ? activeFilterButtonStyle : filterButtonStyle}
                        >{city}</button>
                    ))}
                </div>
                {/* –°–µ—Ç–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫ */} 
                <div style={{ display: 'flex', flexWrap: 'wrap' }}>
                    {filteredMembers.length > 0 ? (
                        filteredMembers.map(member => (
                            <div key={member.id} title={member.name} style={avatarStyle}> {/* title –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏–º–µ–Ω–∏ */}
                                {member.avatar}
                            </div>
                        ))
                    ) : (
                         <p style={{ width: '100%', textAlign: 'center', color: 'grey' }}>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏–∑ —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–∫–∞ –Ω–µ—Ç.</p>
                    )}
                </div>
                 <p style={{ fontSize: '0.8em', color: 'grey', marginTop: '15px' }}>* –ü–æ–∫–∞–∑–∞–Ω—ã —Å–ª—É—á–∞–π–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–∞–π—Ç–∏ –¥—Ä—É–∑–µ–π!</p>
            </div>
            
            {/* –î—Ä—É–∑—å—è */} 
            <div style={cardStyle}>
                <h2>–î—Ä—É–∑—å—è</h2>
                <p>–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –≤ Eerun –∏ –ø–æ–ª—É—á–∏ –º–µ—Å—è—Ü PRO-–¥–æ—Å—Ç—É–ø–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</p>
                <button style={inviteButtonStyle} onClick={() => console.log('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞')}>
                     <FontAwesomeIcon icon={faUserPlus} style={{ marginRight: '8px' }} />
                     –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞
                </button>
                 <p style={{ fontSize: '0.8em', color: 'grey', marginTop: '15px' }}>* PRO-–¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä–æ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–ª–∞–Ω—ã.</p>
            </div>

            {/* –õ–∏–¥–µ—Ä–±–æ—Ä–¥ */} 
            <div style={cardStyle}>
                 <h2><FontAwesomeIcon icon={faTrophy} /> –õ–∏–¥–µ—Ä–±–æ—Ä–¥ –Ω–µ–¥–µ–ª–∏ (–∫–º)</h2>
                 {/* –ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤ */} 
                 <ol style={{ paddingLeft: '20px', margin: 0 }}>
                     {sampleLeaderboard.map(user => (
                         <li key={user.id} style={{ marginBottom: '5px' }}>
                             {user.name} - {user.score} –∫–º
                         </li>
                     ))}
                 </ol>
                  <p style={{ fontSize: '0.8em', color: 'grey', marginTop: '15px' }}>* –°–æ—Ä–µ–≤–Ω—É–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–ª—É–±–∞!</p>
            </div>

            {/* –ì—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–±–µ–∂–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º) */}
            <div style={cardStyle}>
                <h2>–ì—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–±–µ–∂–∫–∏</h2>
                <p>üèÉ‚Äç‚ôÄÔ∏è –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫. –ê–Ω–æ–Ω—Å—ã - –≤ —á–∞—Ç–µ!</p>
            </div>

        </div>
    );
};

export default ClubScreen; 