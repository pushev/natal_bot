import React, { useState, useMemo } from 'react';

// –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è samplePlan –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
// –í –∏–¥–µ–∞–ª–µ, –ø–ª–∞–Ω –∏ –¥–∞—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∏–∑ App.tsx –∏–ª–∏ context,
// –Ω–æ –¥–ª—è MVP –¥—É–±–ª–∏—Ä—É–µ–º/—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–¥–µ—Å—å.
const samplePlan = [
  { week: 1, day: 1, type: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ', description: '2 –º–∏–Ω –±–µ–≥ / 3 –º–∏–Ω —Ö–æ–¥—å–±–∞, 5 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π' }, { week: 1, day: 2, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 1, day: 3, type: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ', description: '3 –º–∏–Ω –±–µ–≥ / 3 –º–∏–Ω —Ö–æ–¥—å–±–∞, 4 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è' }, { week: 1, day: 4, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 1, day: 5, type: '–õ–µ–≥–∫–∞—è —Ö–æ–¥—å–±–∞', description: '30 –º–∏–Ω—É—Ç' }, { week: 1, day: 6, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 1, day: 7, type: '–û—Ç–¥—ã—Ö', description: '-' },
  { week: 2, day: 1, type: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ', description: '3 –º–∏–Ω –±–µ–≥ / 2 –º–∏–Ω —Ö–æ–¥—å–±–∞, 5 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π' }, { week: 2, day: 2, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 2, day: 3, type: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ', description: '4 –º–∏–Ω –±–µ–≥ / 2 –º–∏–Ω —Ö–æ–¥—å–±–∞, 4 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è' }, { week: 2, day: 4, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 2, day: 5, type: '–õ–µ–≥–∫–∏–π –±–µ–≥', description: '15-20 –º–∏–Ω—É—Ç' }, { week: 2, day: 6, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 2, day: 7, type: '–û—Ç–¥—ã—Ö', description: '-' },
  { week: 3, day: 1, type: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ', description: '5 –º–∏–Ω –±–µ–≥ / 2 –º–∏–Ω —Ö–æ–¥—å–±–∞, 4 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è' }, { week: 3, day: 2, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 3, day: 3, type: '–ß–µ—Ä–µ–¥–æ–≤–∞–Ω–∏–µ', description: '6 –º–∏–Ω –±–µ–≥ / 2 –º–∏–Ω —Ö–æ–¥—å–±–∞, 3 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è' }, { week: 3, day: 4, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 3, day: 5, type: '–õ–µ–≥–∫–∏–π –±–µ–≥', description: '20-25 –º–∏–Ω—É—Ç' }, { week: 3, day: 6, type: '–û—Ç–¥—ã—Ö', description: '-' }, { week: 3, day: 7, type: '–û—Ç–¥—ã—Ö', description: '-' },
];

// –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤
const sampleStarts = [
    { id: 1, name: '–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –ú–∞—Ä–∞—Ñ–æ–Ω', location: '–ú–æ—Å–∫–≤–∞', month: '–°–µ–Ω—Ç—è–±—Ä—å', distances: ['10k', '42k'], registeredUsersCount: 15 },
    { id: 2, name: '–ó–∞–±–µ–≥ "–ë–µ–ª—ã–µ –ù–æ—á–∏"', location: '–°–ü–±', month: '–ò—é–Ω—å', distances: ['10k', '21k'], registeredUsersCount: 8 },
    { id: 3, name: '–°–µ—Ä–∏—è "–ë–µ–≥–æ–º –ø–æ –ó–æ–ª–æ—Ç–æ–º—É –ö–æ–ª—å—Ü—É"', location: '–†–∞–∑–Ω—ã–µ –≥–æ—Ä–æ–¥–∞', month: '–õ–µ—Ç–æ', distances: ['5k', '10k', '21k'], registeredUsersCount: 25 },
    { id: 4, name: '–û–Ω–ª–∞–π–Ω-–∑–∞–±–µ–≥ "–ë–µ–≥—É –∫ —Ü–µ–ª–∏"', location: '–û–Ω–ª–∞–π–Ω', month: '–ö—Ä—É–≥–ª—ã–π –≥–æ–¥', distances: ['5k', '10k'], registeredUsersCount: 5 },
    { id: 5, name: '–ü–∞—Ä–∫–æ–≤—ã–π –∑–∞–±–µ–≥ "5 –≤–µ—Ä—Å—Ç"', location: '–ú–Ω–æ–≥–∏–µ –ø–∞—Ä–∫–∏', month: '–ö–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É', distances: ['5k'], registeredUsersCount: 42 },
    { id: 6, name: '–¢—É—à–∏–Ω—Å–∫–∏–π –ø–æ–ª—É–º–∞—Ä–∞—Ñ–æ–Ω', location: '–ú–æ—Å–∫–≤–∞', month: '–ê–≤–≥—É—Å—Ç', distances: ['21k'], registeredUsersCount: 3 },
];

// –¢–∏–ø –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
type DistanceFilter = 'all' | '5k' | '10k' | '21k';

// –•–µ–ª–ø–µ—Ä –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
const formatDateFull = (date: Date): string => {
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    return `${day}.${month}.${year}`;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç userData
interface GoalsScreenProps {
  userData: Record<string, any>;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
const getInitialFilter = (goal: string | undefined): DistanceFilter => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —á–∏—Å–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ —Ü–µ–ª–∏
  if (!goal) return 'all'; // –ï—Å–ª–∏ —Ü–µ–ª–∏ –Ω–µ—Ç
  
  if (goal.includes('21')) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–∞—á–∞–ª–∞ 21
    return '21k';
  }
  if (goal.includes('10')) {
    return '10k';
  }
  if (goal.includes('5')) {
    return '5k';
  }

  return 'all'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
};

const GoalsScreen: React.FC<GoalsScreenProps> = ({ userData }) => {
   // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   const [distanceFilter, setDistanceFilter] = useState<DistanceFilter>(() => getInitialFilter(userData.goal)); 

   const cardStyle: React.CSSProperties = {
    backgroundColor: 'white',
    borderRadius: '8px',
    padding: '20px',
    marginBottom: '15px',
    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
  };

   // –°—Ç–∏–ª—å –¥–ª—è "–∑–æ–ª–æ—Ç–æ–π" –ø–ª–∞—à–∫–∏
   const goldCardStyle: React.CSSProperties = {
       ...cardStyle,
       backgroundColor: '#fffbeb', // –°–≤–µ—Ç–ª–æ-–∂–µ–ª—Ç—ã–π
       border: '1px solid #ffeeba' // –ó–æ–ª–æ—Ç–∏—Å—Ç—ã–π
   };

   // –°—Ç–∏–ª—å –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ä—Ç–∞
   const startCardStyle: React.CSSProperties = {
       ...cardStyle,
       padding: '15px', // –£–º–µ–Ω—å—à–∏–º –ø–∞–¥–¥–∏–Ω–≥ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
       display: 'flex',
       flexDirection: 'column',
       gap: '5px', // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
       position: 'relative' // –î–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∫–æ–Ω–æ–∫
   };

   // –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–∞
   const filterButtonStyle: React.CSSProperties = { padding: '5px 10px', marginRight: '10px', border: '1px solid #ccc', borderRadius: '15px', background: '#f8f9fa', cursor: 'pointer', fontSize: '14px' };
   const activeFilterButtonStyle: React.CSSProperties = { ...filterButtonStyle, background: '#007bff', color: 'white', borderColor: '#007bff' };

   // –°—Ç–∏–ª—å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
   const filterContainerStyle: React.CSSProperties = {
       padding: '10px 0', // –ù–µ–±–æ–ª—å—à–æ–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø
       marginBottom: '15px',
       borderBottom: '1px solid #eee', // –õ–∏–Ω–∏—è —Å–Ω–∏–∑—É –¥–ª—è –æ—Ç–¥–µ–ª–µ–Ω–∏—è
   };

   // –†–∞—Å—á–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ–π –¥–∞—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–ø–æ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ samplePlan)
   const estimatedEndDate = useMemo(() => {
       const planStartDate = new Date(); // –ë–µ—Ä–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∫–∞–∫ —Å—Ç–∞—Ä—Ç
       planStartDate.setHours(0, 0, 0, 0);
       const totalWeeks = Math.max(0, ...samplePlan.map(item => item.week));
       if (totalWeeks === 0) return null;

       const endDate = new Date(planStartDate);
       endDate.setDate(planStartDate.getDate() + totalWeeks * 7 -1); // –ö–æ–Ω–µ—Ü –ø–æ—Å–ª–µ–¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
       return formatDateFull(endDate);
   }, []); // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑

   // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç–∞—Ä—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏
   const filteredStarts = useMemo(() => {
       if (distanceFilter === 'all') {
           return sampleStarts;
       }
       return sampleStarts.filter(start => start.distances.includes(distanceFilter));
   }, [distanceFilter]);

  return (
     // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø—ã
    <div style={{ paddingBottom: '80px', paddingLeft: '10px', paddingRight: '10px' }}>
      <h1>–ú–æ–∏ —Ü–µ–ª–∏</h1>
      
      {/* "–ó–æ–ª–æ—Ç–∞—è" –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–∫—É—â–µ–π —Ü–µ–ª–∏ */} 
      <div style={goldCardStyle}>
        <h2 style={{ marginTop: 0 }}>–¢–µ–∫—É—â–∞—è —Ü–µ–ª—å</h2>
        <p style={{ fontSize: '1.4em', fontWeight: 'bold', margin: '10px 0' }}>
           üéØ {userData.goal || '–¶–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞'} 
        </p>
        <p style={{ margin: '5px 0' }}>
            <strong>–°—Ç–∞—Ç—É—Å:</strong> –í –ø—Ä–æ—Ü–µ—Å—Å–µ
        </p>
        {estimatedEndDate && (
             <p style={{ margin: '5px 0' }}>
                 <strong>–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ:</strong> {estimatedEndDate}
            </p>
        )}
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ —Å—Ç–∞—Ä—Ç—ã */}
       <div style={cardStyle}>
        <h2>üéØ –ë–µ–≥–∏ –∫ —Å—Ç–∞—Ä—Ç—É!</h2>
        <p>–õ—É—á—à–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–±–µ–≥! –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–µ –±—Ä–æ—Å–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ —ç–º–æ—Ü–∏–∏ –Ω–∞ —Ñ–∏–Ω–∏—à–µ.</p>
        
        {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ */} 
        <div style={filterContainerStyle}> 
            {/* –£–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –º–µ—Ç–∫—É */} 
            {/* <span>–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ä—Ç—ã: </span> */}
            <button 
                onClick={() => setDistanceFilter('all')}
                style={distanceFilter === 'all' ? activeFilterButtonStyle : filterButtonStyle}
            >–í—Å–µ</button>
            <button 
                onClick={() => setDistanceFilter('5k')}
                style={distanceFilter === '5k' ? activeFilterButtonStyle : filterButtonStyle}
            >5 –∫–º</button>
            <button 
                 onClick={() => setDistanceFilter('10k')}
                 style={distanceFilter === '10k' ? activeFilterButtonStyle : filterButtonStyle}
            >10 –∫–º</button>
             <button 
                 onClick={() => setDistanceFilter('21k')}
                 style={distanceFilter === '21k' ? activeFilterButtonStyle : filterButtonStyle}
             >21 –∫–º</button>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ä—Ç–æ–≤ –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫ */} 
        {filteredStarts.length > 0 ? (
            filteredStarts.map(start => (
                <div key={start.id} style={startCardStyle}>
                   {/* –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ —Å –∏–∫–æ–Ω–∫–∞–º–∏ —Å–ø—Ä–∞–≤–∞ –≤–≤–µ—Ä—Ö—É */} 
                   <div style={{ position: 'absolute', top: '10px', right: '10px', display: 'flex', alignItems: 'center', gap: '8px' }}>
                       {/* –ò–∫–æ–Ω–∫–∞ "—É—á–∞—Å—Ç–Ω–∏–∫–∏" */} 
                       {start.registeredUsersCount > 0 && (
                           <span title={`–£–∂–µ —É—á–∞—Å—Ç–≤—É—é—Ç: ${start.registeredUsersCount}`} style={{ fontSize: '0.9em', color: '#6c757d', display: 'flex', alignItems: 'center' }}>
                               <span style={{ marginRight: '3px' }}>üë•</span> {/* –≠–º–æ–¥–∑–∏ –∏–ª–∏ FontAwesome –∏–∫–æ–Ω–∫–∞ */} 
                               {start.registeredUsersCount}
                           </span>
                       )}
                       {/* –ò–∫–æ–Ω–∫–∞ "–≤—ã–±—Ä–∞—Ç—å —Ü–µ–ª—å—é" (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞) */} 
                       <span title="–°–¥–µ–ª–∞—Ç—å –∫–ª—é—á–µ–≤—ã–º —Å—Ç–∞—Ä—Ç–æ–º" style={{ cursor: 'pointer', color: '#ffc107' }}>
                           ‚≠ê {/* –≠–º–æ–¥–∑–∏ –∏–ª–∏ FontAwesome –∏–∫–æ–Ω–∫–∞ */} 
                       </span>
                   </div>

                   <h4 style={{ margin: 0, paddingRight: '50px' }}>{start.name}</h4> {/* –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –¥–ª—è –∏–∫–æ–Ω–æ–∫ */}
                   <span style={{ fontSize: '0.9em', color: 'grey' }}>{start.location}, {start.month}</span>
                   {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ */} 
                   <div style={{ fontSize: '0.8em' }}>
                       –î–∏—Å—Ç–∞–Ω—Ü–∏–∏: {start.distances.join(', ').replace(/k/g, ' –∫–º')}
                   </div>
                   {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç —Å—Ç–∞—Ä—Ç–∞ */}
                   {/* <a href="#" target="_blank">–ü–æ–¥—Ä–æ–±–Ω–µ–µ...</a> */}
                </div>
            ))
        ) : (
            <p>–ü–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç–∞—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏.</p>
        )}
        
        <p style={{ marginTop: '15px' }}><i>–ò—â–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ä—Ç—ã –≤ —Å–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –æ–Ω–ª–∞–π–Ω!</i></p>
      </div>

       {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –∞—Ä—Ö–∏–≤–∞ */}
       <div style={cardStyle}>
        <h2>–ê—Ä—Ö–∏–≤ —Ü–µ–ª–µ–π</h2>
        <p>–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ç–≤–æ–∏ –ø—Ä–æ—à–ª—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.</p>
        <p><i>(–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</i></p>
      </div>
      
       {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–æ–≤—ã—Ö —Ü–µ–ª–µ–π (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å) */}
       {/* <div style={cardStyle}>
        <h2>–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ü–µ–ª—å</h2>
        <p>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –Ω–æ–≤—É—é –¥–∏—Å—Ç–∞–Ω—Ü–∏—é –∏–ª–∏ —Ç–∏–ø —Ü–µ–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–ª–∞–Ω–∞.</p>
         <p><i>(–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</i></p>
      </div> */} 

    </div>
  );
};

export default GoalsScreen; 